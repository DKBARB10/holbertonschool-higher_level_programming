
# 1-my_list.txt
# Juan Duque <3428@holbertonschool.com>

==========
How to use
==========

Instantiation
=============

``MyList`` can be instantiated with no arguments, which will return
an empty list:

::

    >>> MyList = __import__('1-my_list').MyList
    >>> my_list = MyList()
    >>> type(my_list)
    <class '1-my_list.MyList'>

::
    >>> print(my_list)
    []


New List
=========
::

    >>> family = MyList()
    >>> family.append("Juan")
    >>> print(family)
    ['Juan']


::

    >>> my_list = MyList([10,50,5.0])
    >>> print(my_list)
    [10, 50, 5.0]


::

    >>> my_list = MyList()
    >>> my_list.print_sorted()
    []

::

    >>> print(my_list)


::


    >>> my_list = MyList(None)
    Traceback (most recent call last):
    TypeError: 'NoneType' object is not iterable


If ``print_sorted(...)`` is called on a list of different types, a TypeError
will be raised.

::

    >>> my_list = MyList([1, "Betty", "Holberton", 5])
    >>> my_list.print_sorted()
    Traceback (most recent call last):
    TypeError: unorderable types: str() < int()